mixin styles
    style.
        li.device {
            background-repeat: no-repeat;
            background-size: 20px 20px;
            padding-left: 25px;
            padding-bottom: 2px;
            font-size: large;
        }
        ul.devices {
            list-style-type: none;
            padding: 5;
            margin: 0;
        }
        .left-margin {
            margin-left: 80px;
        }


mixin devicesForWeatherStation(id)
    //- mixin devicesForStreetLight(id,entitiesPirSensor,entitiesPhotoresistorSensor,entitiesLedDetectionActuator,entitiesLigthActuator)
    //- script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.2/socket.io.min.js')
    //- script(src='https://code.jquery.com/jquery-1.11.1.js')

    div(class="card m-2")
        div.card-title
            div.row
                .col-xl-9.col-sm-12
                    strong(style="margin-left:20px") Lego Weather Station
                    | &nbsp;    
                    code(style="font-size:large") urn:ngsi-ld:LegoWeatherStation:#{id}
        div.card-body
            ul.devices.left-margin
                div.row
                    div.col-4
                        | &nbsp;  &nbsp; &nbsp;
                        button(id="weatherStationButton" class="btn") asdf
                        | &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;

                    div.col-2
                        span.timer_weatherStation ...
                    div.col-6
                        .row
                            .col    
                                li(style="background-image: url('/img/warehouse-full.svg')").device   
                                    code 
                                        | &nbsp;
                                        strong TemperatureSensor#{id}
                                        | &nbsp;
                                        span.temperature ...
                            .col
                        .row 
                            div.col
                                li(style="background-image: url('/img/warehouse-full.svg')").device
                                    code 
                                        | &nbsp;
                                        strong HumiditySensor#{id}
                                        | &nbsp;
                                        span.humidity ...
                            div.col


    script.

        $(function () {
            const socket = io();
        
            socket.on('update_temperatureSensor', function(temperature) {
                $('.temperature').text(temperature);
            });
            socket.on('update_humiditySensor', function(humidity) {
                $('.humidity').text(humidity);
            });

            socket.on('update_simulate', function(simulate) {
                console.log("aaaaaa");
                console.log(simulate[7]);
                state_watherStation = simulate[7];
                updateWeatherStationButton(state_watherStation);
            });

        });

        function updateWeatherStationButton(state_weatherStation) {
            if (state_weatherStation) {
                $('#weatherStationButton').removeClass('btn-danger').addClass('btn-success').text('ON');
            } else {
                $('#weatherStationButton').removeClass('btn-success').addClass('btn-danger').text('OFF');
            }
        }

        $(document).ready(function() {
            // Inicializar el estado del botón
            // Manejar el clic en el botón

            $('#weatherStationButton').click(function() {
                const currentState = $('#weatherStationButton').hasClass('btn-success');
                const newState = !currentState;
                // Enviar la solicitud POST para cambiar el estado
                $.post('/weatherStation/toggle', { state: newState }, function(response) {
                    // Actualizar el estado del botón basado en la respuesta
                    //- updateWeatherStationButton(newState);
                });
            });

            //- updateWeatherStationButton(controlConfigJSON.wather_station.simulate_weather_station);
        });



