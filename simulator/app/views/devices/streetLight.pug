mixin styles
    style.
        li.device {
            background-repeat: no-repeat;
            background-size: 20px 20px;
            padding-left: 25px;
            padding-bottom: 2px;
            font-size: large;
        }
        ul.devices {
            list-style-type: none;
            padding: 5;
            margin: 0;
        }

mixin devicesForStreetLight(id)
    //- mixin devicesForStreetLight(id,entitiesPirSensor,entitiesPhotoresistorSensor,entitiesLedDetectionActuator,entitiesLigthActuator)
    //- script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.2/socket.io.min.js')
    //- script(src='https://code.jquery.com/jquery-1.11.1.js')

    div(class="card m-2")
        div.card-title
            div.row
                .col-xl-9.col-sm-12
                    strong(style="margin-left:20px") Street Light 
                    | &nbsp;
                    code(style="font-size:large") urn:ngsi-ld:LegoStreetLight:#{id}
                //- .col-xl-3.col-sm-12
                //-     span Modo aleatorio
                //-     input(type="checkbox" id="pruebas" name="pruebas" value="prueba" style="margin-left:10px")
        div.card-body
            ul.devices
                div.row
                    div.col-5
                        //- li(style="background-image: url('/img/warehouse-full.svg')").device  
                        li.device  
                            //- input(type="checkbox" id="simulate_pirSensor" name="simulate_pirSensor" value="simulate_pirSensor" )
                            //- input(type="checkbox" id="simulate_pirSensor" name="simulate_pirSensor" value="simulate_pirSensor" )
                            button(id="pirSensorButton" class="btn")
                            | &nbsp; 
                            //- img(src="/img/warehouse-full.svg", alt="alt").device
                            code 
                                | &nbsp;
                                strong PirSensor#{id}
                                | &nbsp;
                                //- span.device(id=`PirSensor:${id}`) 
                                span.presence ...
                                //-   #{entitiesPirSensor.presence}
                                | &nbsp;
                    div.col-1
                            span.timer_pirSensor ...
                    div.col-6
                        li(style="background-image: url('/img/warehouse-full.svg')").device
                            code 
                                strong LedDetection#{id}
                                | &nbsp;
                                //- span.device(id=`LedDetection:${id}`)
                                span.stateLed ...
                div.row 
                    div.col-5
                        //- li(style="background-image: url('/img/warehouse-full.svg')").device
                        li.device  
                            button(id="photoresistorSensorButton" class="btn").
                            | &nbsp;
                            code 
                                | &nbsp;
                                strong PhotoresistorSensor#{id}
                                | &nbsp;
                                //- span.device(id=`PhotoresistorSensor${id}`)
                                span.intensity ...
                            | &nbsp; &nbsp; &nbsp;
                    div.col-1
                            span.timer_photoresistorSensor ...
                    div.col-6
                        li(style="background-image: url('/img/warehouse-full.svg')").device
                            code 
                                strong Light#{id}
                                | &nbsp;
                                //- span.device(id=`Light:${id}`)
                                span.stateLight ...


    script.

        $(function () {
            const socket = io();
        
            socket.on('update_pirSensor', function(presence_pirSensor) {
                $('.presence').text(presence_pirSensor);
            });
            socket.on('update_photoresistorSensor', function(light_potentiometerSensor) {
                $('.intensity').text(light_potentiometerSensor);
            });

            socket.on('update_ledDetectionActuator', function(state_ledDetectionActuator) {
                $('.stateLed').text(state_ledDetectionActuator);
            });

            socket.on('update_lightActuator', function(state_lightActuator) {
                $('.stateLight').text(state_lightActuator);
            });

            socket.on('update_simulate', function(simulate) {
                state_pirSensor = simulate[0];
                state_photoresistorSensor = simulate[1];
                updatePirSensorButton(state_pirSensor);
                updatePhotoresistorSensorButton(state_photoresistorSensor);
                //- $('.state_photoresistorSensor').text(simulate[1]);
                //- $('.state_potentiometerSensor').text(simulate[2]);
                //- $('.state_infraredSensor').text(simulate[3]);
                //- $('.state_switchSensor').text(simulate[4]);
                //- $('.state_rfidSensor').text(simulate[5]);
                //- $('.state_ultrasoundSensor').text(simulate[6]);
                //- $('.state_weatherStation').text(simulate[7]);
            });

        });

        function updatePirSensorButton(state_pirSensor) {
            if (state_pirSensor) {
                $('#pirSensorButton').removeClass('btn-danger').addClass('btn-success').text('ON');
            } else {
                $('#pirSensorButton').removeClass('btn-success').addClass('btn-danger').text('OFF');
            }
        }

        function updatePhotoresistorSensorButton(state_photoresistorSensor) {
            if (state_photoresistorSensor) {
                $('#photoresistorSensorButton').removeClass('btn-danger').addClass('btn-success').text('ON');
            } else {
                $('#photoresistorSensorButton').removeClass('btn-success').addClass('btn-danger').text('OFF');
            }
        }


        $(document).ready(function() {
            // Inicializar el estado del bot贸n
            // Manejar el clic en el bot贸n
            $('#pirSensorButton').click(function() {
                const currentState = $('#pirSensorButton').hasClass('btn-success');
                const newState = !currentState;
                // Enviar la solicitud POST para cambiar el estado
                $.post('/pirSensor/toggle', { state: newState }, function(response) {
                    // Actualizar el estado del bot贸n basado en la respuesta
                    //- updatePirSensorButton(newState);
                });
            });

            $('#photoresistorSensorButton').click(function() {
                const currentState = $('#photoresistorSensorButton').hasClass('btn-success');
                const newState = !currentState;
                // Enviar la solicitud POST para cambiar el estado
                $.post('/photoresistorSensor/toggle', { state: newState }, function(response) {
                    // Actualizar el estado del bot贸n basado en la respuesta
                    //- updatePhotoresistorSensorButton(newState);
                });
            });

            //- updatePirSensorButton(controlConfigJSON.photoresistor_sensor.simulate_photoresistor_sensor);
            //- updatePhotoresistorSensorButton(controlConfigJSON.photoresistor_sensor.simulate_photoresistor_sensor);

        });