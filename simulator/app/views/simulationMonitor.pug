extends layout

include devices/streetLight.pug
include devices/weatherStation.pug
include devices/train.pug

include devices/crane.pug
include devices/radar.pug
include devices/railroadSwitch.pug
include devices/toll.pug

block content

    script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.2/socket.io.min.js')
    script(src='https://code.jquery.com/jquery-3.6.0.min.js')

    +styles
    p
    div.row(style="display: flex; justify-content: center;")
        div.col
            div.card(style="display: flex; flex-direction: column; align-items: center; justify-content: center; width: 40%; margin: auto;")
                div.card-body
                    .row
                        button.btn.btn-primary.btn-sm(id="state_iniMode" type="button" style="margin-left:10px") Mode     
                    .row
                        button.btn.btn-primary.btn-sm(id="state_iniStateButton" type="button" style="margin-left:10px; margin-top:4px") Start/Pause     
                    .row  
                        span.state_simulator
                    .row 
                        span.state_raspberry
    p
    div.row
        div.col-lg-6.col-sm-12
            +devicesForStreetLight(`${envConfig.device_number}`)
        div.col-lg-6.col-sm-12
            +devicesForWeatherStation(`${envConfig.device_number}`)
    div.row    
        div.col-lg-6.col-sm-12
            +devicesForTrain(`${envConfig.device_number}`)
        div.col-lg-6.col-sm-12
            +devicesForCrane(`${envConfig.device_number}`)

    div.row
        div.col-lg-6.col-sm-12
            +devicesForRadar(`${envConfig.device_number}`)
        div.col-lg-6.col-sm-12
            +devicesForRailroadSwitch(`${envConfig.device_number}`)
    
    div.row
        div.col-lg-6.col-sm-12
            +devicesForToll(`${envConfig.device_number}`)
        div.col-lg-6.col-sm-12

    script.
        const controlConfigJSON = !{JSON.stringify(controlConfigJSON)};
        const isBehindProxy = window.location.port === "80" || window.location.port === "";
        const route = isBehindProxy ? '/simulatorApp' : '';

    script.
        $(function () {
            //- const socket = io(controlConfigJSON.mode_containers ? '/simulatorApp' : '/');
            //- const socket = io(controlConfigJSON.mode_containers ? '/simulatorApp' : '/');
            //- const socket = io(true ? '/simulatorApp' : '/');
            const socket = isBehindProxy 
                ? io('', { path: '/simulatorApp/socket.io' }) 
                : io();


            socket.on('update_timer', function(timer) {
                $('.timer_pirSensor').text(timer[0]);
                $('.timer_photoresistorSensor').text(timer[1]);
                $('.timer_potentiometerSensor').text(timer[2]);
                $('.timer_infraredSensor').text(timer[3]);
                $('.timer_switchSensor').text(timer[4]);
                $('.timer_rfidSensor').text(timer[5]);
                $('.timer_ultrasoundSensor').text(timer[6]);
                $('.timer_weatherStation').text(timer[7]);
            });

            socket.on('update', function(presence_pirSensor) {
                $('.presence').text(presence_pirSensor);
            });

            socket.on('update_photoresistorSensor', function(light_potentiometerSensor) {
                $('.intensity').text(light_potentiometerSensor);
            });

            socket.on('update_ledDetectionActuator', function(state_ledDetectionActuator) {
                $('.stateLed').text(state_ledDetectionActuator);
            });

            socket.on('update_lightActuator', function(state_lightActuator) {
                $('.stateLight').text(state_lightActuator);
            });

            socket.on('update_iniState', function(simulate) {
                updateInitState(simulate);
            });

            socket.on('update_modeState', function(simulate) {
                //- updateInitState(simulate);
                updateStartPause(simulate);
            });
        });

        function updateInitState(state_iniState) {
            if (state_iniState) {
                $('#state_iniStateButton').removeClass('btn-danger').addClass('btn-success').text('Simulator');
                $('.state_simulator').removeClass('text-danger').addClass('text-success').text('Simulacion en curso');
                $('.state_raspberry').removeClass('text-success').addClass('text-danger').text('Rasberry IOT apagada');
            } else {
                $('#state_iniStateButton').removeClass('btn-success').addClass('btn-danger').text('Rasberry');
                $('.state_simulator').removeClass('text-success').addClass('text-danger').text('Simulacion detenidas');
                $('.state_raspberry').removeClass('text-danger').addClass('text-success').text('Rasberry IOT encendida');
            }
        }

        //- function updateStartPause(state_mode) {
        //-     if (state_mode) {
        //-         $('#state_iniMode').removeClass('btn-danger').addClass('btn-success').text('ON');
        //-     } else {
        //-         $('#state_iniMode').removeClass('btn-success').addClass('btn-danger').text('OFF');
        //-     }
        //- }

        function updateStartPause(state_mode) {
            if (state_mode) {
                $('#state_iniMode').removeClass('btn-danger').addClass('btn-success').text('ON');
                $('#state_iniStateButton').prop('disabled', false); // Habilitar el botón
            } else {
                $('#state_iniMode').removeClass('btn-success').addClass('btn-danger').text('OFF');
                $('#state_iniStateButton').prop('disabled', true); // Deshabilitar el botón
            }
        }

        $(document).ready(function() {
            $('#state_iniStateButton').click(function() {
                const currentState = $('#state_iniStateButton').hasClass('btn-success');
                const newState = !currentState;
                $.post(`${route}/simulation/toggle`, { state: newState }, function(response) {
                    //- updateInitState(newState);
                });
            });

            $('#state_iniMode').click(function() {
                const currentState = $('#state_iniMode').hasClass('btn-success');
                const newState = !currentState;
                $.post(`${route}/simulator/toggle`, { state: newState }, function(response) {
                    //- updateStartPause(newState);
                });
            });

            //- updateInitState(JSON.inicial_state);
        });