server {
    listen       80;
    listen  [::]:80;
    server_name  138.4.22.12;

    resolver 127.0.0.11 valid=30s;

    # location / {
    #     root   /usr/share/nginx/html;
    #     index  index.html index.htm;
    # }

    # ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### # ## ### ### ### ### ###
    # ### ### Orion
    # ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###
    location ~ ^/orion(.*)$ {
        proxy_pass http://orion:1026$1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    

    # ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###
    # ### ### Draco
    # ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###
    location /draco/nifi/ {
        rewrite ^/draco/nifi/(.*)$ /nifi/$1 break;
        proxy_pass http://draco:9090/nifi/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /draco/nifi-api/ {
        rewrite ^/draco/nifi-api/(.*)$ /nifi-api/$1 break;
        proxy_pass http://draco:9090;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Content-Length $http_content_length;
        proxy_set_header Content-Type $http_content_type;
    }

    location /nifi-api/ {
        proxy_pass http://draco:9090/nifi-api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location ~* ^/draco/?$ {
        return 301 $scheme://$host/draco/nifi/;
    }

    # ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###
    # ### ### Simulator
    # ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###
    location /simulatorApp/ {
        rewrite ^/simulatorApp/(.*)$ /$1 break;
        
        proxy_pass http://simulatorApp:3030/;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Ajustar las rutas en las respuestas del backend
        # Asegura que las rutas devueltas sean relativas a /subsControlApp
        sub_filter 'href="/' 'href="/simulatorApp/';
        sub_filter 'src="/' 'src="/simulatorApp/';
        sub_filter_once off;
    }
    
    location /socket.io/ {
        rewrite ^/socket.io/(.*)$ /$1 break;
        proxy_pass http://simulatorApp:3030/socket.io/;

        # Configuraciones para WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Encabezados adicionales
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Tiempo de espera (ajustar según las necesidades del WebSocket)
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;

        # Evitar compresión para evitar problemas con WebSocket
        proxy_buffering off;
    }

    # ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###
    # ### ### SubsControlApp 
    # ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###
    location /subsControlApp/ {
        # Eliminamos el rewrite y ajustamos proxy_pass.
        # Nginx quita /subsControlApp/ de la petición entrante antes de mandarla a http://subsControlApp:4040/
        proxy_pass http://subsControlApp:4040/; 

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Ajustar las rutas en las respuestas del backend
        sub_filter 'href="/' 'href="/subsControlApp/';
        sub_filter 'src="/' 'src="/subsControlApp/';
        sub_filter_once off;
    }


    # ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###
    # ### ### MiniBucket
    # ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ###
    # Configuración para manejar MinIO Console
    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 300;
        
        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;

        proxy_pass http://minioBucket:9000;
    }
    
    location /minioConsole/ {
        rewrite ^/minioConsole/(.*)$ /$1 break;

        proxy_pass http://minioBucket:9001/;

        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-NginX-Proxy true;
        real_ip_header X-Real-IP;

        chunked_transfer_encoding off;

        sub_filter 'href="/' 'href="/minioConsole/';
        sub_filter 'src="/' 'src="/minioConsole/';
        sub_filter_once off;
    }

    
    location = /index.html {
        root /etc/nginx/html; 
        try_files /index.html =404;
    }


    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
